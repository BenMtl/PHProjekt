A basic module will have in the Form.js file:

[code]
dojo.provide("phpr.MyModule.Form");

dojo.declare("phpr.MyModule.Form", phpr.Default.Form, {
});
[/code]

This is the obligatory code for the file,
but there are other functions that can be re-written for customize the layout:

[emph]constructor:function(main, id, module, params)[/emph]

The function init and render the form.
Re-write it if you need extra action before the render of the form
or for add external function with dojo.subscribe() like the Main does.

[emph]setUrl:function()[/emph]

Set the url for get the data from the server.
Change it if your module use other function than jsonDetail or extra parameters.

[emph]setNode:function()[/emph]

Set the node where put the form.
If you use other div than detailsBox, change it in this function.

[emph]initData:function()[/emph]

Init all the data before draw the form.
This function call all the needed data before the form is showed.
The form will wait for all the data are loaded.
You can add here all the request to the server that the form needs to load.

An example for a system store:

[code]
// Get all the active users
this.userStore = new phpr.Store.User();
this._initData.push({'store': this.userStore});
[/code]

An example for normal request:
[code]
// Get the tags
this._tagUrl  = phpr.webpath + 'index.php/Default/Tag/jsonGetTagsByModule/moduleName/' + phpr.module
    + '/id/' + this.id;
this._initData.push({'url': this._tagUrl});
[/code]

[emph]setPermissions:function(data)[/emph]

Get the permission for the current user on the item.
Change that only if your module have an special access policy.

[emph]useCache:function(data)[/emph]

Return true or false if the cache is used.

[emph]addModuleTabs:function(data)[/emph]

Add all the tabs that are not the basic data.
Define here all the tabs that you want in your form.

[emph]addBasicFields:function()[/emph]

Add some special fields into the Basic Data tab.
By default, the tag fields is added.

[emph]postRenderForm:function()[/emph]

This function is called after the form is render.
You can use it for add special events on the fields for example.

[emph]prepareSubmission:function()[/emph]

This function prepares the content of this.sendData before it is submitted to the Server.
Change this function if you want to make special conventions or changes to the values before send it.

[emph]submitForm:function()[/emph]

This function sends the form data as json data to the server and call the reload routine.
Some examples for re-write this function are:
 - Save or not the tags.
 - Make special reloads after the function.
 - Delete special caches.
 - Set different URL for save the data.
 - Run other action for save related stuff.

[emph]deleteForm:function()[/emph]

This function delete an item.
Some examples for re-write this function are:
 - Delete or not the tags.
 - Make special reloads after the function.
 - Delete special caches.
 - Set different URL for delete the data.
 - Run other action for delete related stuff.

[emph]updateData:function()[/emph]

Delete the cache for this form.
Re-write this function for provide a correct way to delete all the cache used in the form.
