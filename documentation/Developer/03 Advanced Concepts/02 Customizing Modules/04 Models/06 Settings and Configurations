Each module can provide their own settings and configurations.
The difference between both is that the Settings are per user, and the Configurations are for all the users.
For provide special settings, you need a file into applications/MyModule/Models/ named Setting.php
This class must have the functions getFieldDefinition:

[emph]public function getFieldDefinition()[/emph]

Return an array with the field information.
The data have the same structure than the Phprojekt_DatabaseManager returns for make the form.
You can see an example of that in the Timecard module.

Other functions that can be re-written are:

[emph]public function getXXX()[/emph]

If you need to make an special getter for one setting, you can do it with this function.

[code]
public function getMySetting($value)
{
    return 'mySettingValue';
}
[/code]

This function will be called for get the value of the setting "mySetting". Look the CamelCase.
You can define a getter for all the setting, or leave that to the parent class.

[emph]public function validateSettings($params)[/emph]

If you need to make an special validation for all the values of the settings, you can do it with this function.

[emph]public function setSettings($params, $userId = 0)[/emph]

Write this function if you want to save the settings in a different way than the default.


[emph]Configurations[/emph]

The configuration works in the same way than the settings, but with other names in the functions:

[emph]public function getFieldDefinition()[/emph]
[emph]public function getXXX($value)[/emph]
[emph]public function validateConfigurations($params)[/emph]
[emph]public function setConfigurations($params)[/emph]


[emph]Working with the values[/emph]

When you want to get the value of the setting in your code, use:

[code]
$setting = Phprojekt_Loader::getModel('Setting', 'Setting');
$setting->setModule('MyModule');

$mySetting = $setting->getSetting('mySetting');
[/code]

And for configurations:
[code]
$configuration = Phprojekt_Loader::getModel('Setting', 'Setting');
$configuration->setModule('MyModule');

$mySetting = $configuration->getAdministration('myConfiguration');
[/code]

For save the value, each user can do it in the Setting section,
and the administrator can do the same for the configurations in the Administration section.
