[emph]1. Overview of PHProjekt 6 rights structure[/emph]

[emph]RBAC[/emph]
The Role based access Rights in Phprojekt 6 are based on the Zend Acls.
The Zend Acls consist of Resources and Roles.

In the terms of Zend this means:
    
- a Resource is an object to which access is controlled. 
- a Role is an object that may request access to a Resource.
For Phprojekt the Resources are the modules and the Role determines
whether one can read or write this module or not.
In Zend_Acl and therefore in Phprojekt 6, a Role may inherit from one or more Roles.
This is to support inheritance of rules among Roles.
For example, a user Role, such as "superuser", may belong to one or more parent Roles,
such as "editor" and "administrator".
The developer can assign rules to "editor" and "administrator" separately,
and "superuser" would inherit such rules from both,
without having to assign rules directly to "superuser". 

In addition to that roles in Phprojekt always are assigned to a project.
If a user has no role assigned in a project he automatically inherits the role
he has in its parent project.
If a user has no role in a root project this means that he isn't allowed to enter
the whole branch of the tree beneath that project.
That way Phprojekt 6 still supports Multitenancy,
as a project for which a user has no role and all items within that project
are completely invisible to this user

[emph]DAC[/emph]
In addition to the Role based access rights,
Phprojekt 6 also supports discretionary access control (or item based access control).
This means that a user with owner/admin(we still have to agree on the best name for that right) 
Privileges on a Phprojekt item can determine who is allowed to read,
write or administrate this item.
As we wanted to keep things as simple as possible the
different item privileges can't be assigned on a per user basis but only per group.
Meaning that you can assign one group each with read/write/admin privileges for Phprojekt items. 

[emph]Combination of DAC and RBAC[/emph]
In the end the combination of the role based and item based rights will determine
the right of a user for a Phprojekt item. The right for every single item
is calculated as the intersection of role and item base rights. 

[emph]2.How to use Phprojekt Acls[/emph]

[emph]Role rights[/emph]
In order to find out which role right a user has within a project or item
you can use the class Phprojekt_RoleRights.
All roles and rights within Phprojekt are stored in the Zend Acls.
The Zend Acls are constructed in the Singleton class Phprojekt_Acl. 
Therefore the Class Phprojekt_RoleRights gets the current Acls on construction,
and you can find out e.g. if a user is allowed to create new todos within
a certain project by using its hasRight() method.

[emph]Item based rights[/emph]
The item based rights are stored within the module table of Phprojekt.
Every module table must contain the field 'owenerID'
which contains the userId of the owner,
and the fields 'read', 'write', and 'admin' which contain
the groupIds of the groups with the respective rights.
That way the item based privileges of a Phprojekt item are returned
with the current data of that item and can be accessed
within its Model(you can get the group with read rights, e.g. with $this->_data['read']).
In order to determine whether a user has for example read rights on a project
all you have to do is to check whether the current user
is participant of the group which is stored in the read column of that item.
This can be checked by using the Method isUserInGroup($group) of the Groups_Models_Groups Class 

[emph]Combination of both[/emph]
Whenever you need to know which privilege a user has for a certain action
or item in Phprojekt you will always need to know
the result of the combination of item based and role rights.
Therefore Phprojekt 6 already provides a class which calculates the current privilege
by retrieving the current role and item right and calculating its intersection.
This method is called  getRights() and is stored within the class Phprojekt_Item_Abstract.
That way you can access this method for every Phprojekt Item and it automatically returns it rights.
