//>>built
require({cache:{"url:phpr/template/bookingList/summaryBlock.html":'<div class="summary">\n    <table>\n        <thead>\n            <th colspan="2">Overtime</th>\n        </thead>\n        <tbody>\n        <tr>\n            <td><span data-dojo-attach-point="monthName"></span></td>\n            <td>\n                <span data-dojo-attach-point="thisMonthDiff"></span>\n            </td>\n        </tr>\n        <tr>\n            <td>Total</td>\n            <td>\n                <span data-dojo-attach-point="totalDiff"></span>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n'}});
define("phpr/BookingList/SummaryBlock","dojo/_base/declare,dojo/_base/lang,dojo/topic,dojo/dom-style,dojo/dom-class,dojo/promise/all,dojo/date/locale,dojo/DeferredList,dijit/_WidgetBase,dijit/_TemplatedMixin,phpr/Api,phpr/Timehelper,phpr/models/Timecard,dojo/text!phpr/template/bookingList/summaryBlock.html".split(","),function(f,b,c,n,d,i,j,o,g,k,l,h,e,m){return f([g,k],{date:new Date,constructor:function(){this.own(c.subscribe("timecard/bookingCreated",b.hitch(this,this._scheduleUpdate)));this.own(c.subscribe("timecard/bookingEdited",
b.hitch(this,this._scheduleUpdate)));this.own(c.subscribe("timecard/bookingDeleted",b.hitch(this,this._scheduleUpdate)));this.own(c.subscribe("timecard/selectedDateChanged",b.hitch(this,function(a){this._set("date",a)})))},templateString:m,_setStoreAttr:function(a){this.store=a;this._scheduleUpdate()},_setDateAttr:function(a){this._set("date",a);this._scheduleUpdate()},updateScheduled:!1,_scheduleUpdate:function(){this.updateScheduled||(updateScheduled=!0,setTimeout(b.hitch(this,this._update),0))},
_update:function(){if(!this._destroyed){var a=h.exclude(new Date),c=e.getMinutesBookedTotal({end:a}),f=e.getMinutesToWorkTotal({end:a}),g=e.getMinutesBooked({end:a}),a=e.getMinutesToWork({end:a});i({bookedTotal:c,toWorkTotal:f,bookedMonth:g,toWorkMonth:a}).then(b.hitch(this,function(a){if(!this._destroyed){var b=a.bookedTotal.minutesBooked-a.toWorkTotal.minutesToWork,a=a.bookedMonth.minutesBooked-a.toWorkMonth.minutesToWork;this.monthName.innerHTML=j.format(new Date,{selector:"date",datePattern:"MMMM y"});
this.totalDiff.innerHTML=h.minutesToHMString(b);this.thisMonthDiff.innerHTML=h.minutesToHMString(a);0>b?d.add(this.totalDiff,"negative"):d.remove(this.totalDiff,"negative");0>a?d.add(this.thisMonthDiff,"negative"):d.remove(this.thisMonthDiff,"negative");this.updateScheduled=!1}}),l.defaultErrorHandler)}}})});