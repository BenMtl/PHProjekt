//>>built
require({cache:{"url:phpr/template/statistics/WorktimeMonthGraph.html":'<div>\n        <svg height="72" width="834" data-dojo-attach-point="bookedTimePerDayGraph">\n            <rect class="background" height="72" width="834"/>\n            <rect class="upperLeftRect" data-dojo-attach-point="upperLeftRect"/>\n        </svg>\n        <span class="firstDayLabel" data-dojo-attach-point="firstDayLabel"></span>\n        <span class="lastDayLabel" data-dojo-attach-point="lastDayLabel"></span>\n        <div class="overtimeLabel" data-dojo-attach-point="overtimeLabel"></div>\n</div>\n'}});
define("phpr/Statistics/WorktimeMonthGraph","dojo/_base/lang,dojo/_base/declare,dojo/_base/array,dojo/dom-attr,dojo/dom-construct,dojo/date,dojo/date/locale,dojo/promise/all,dijit/_Widget,dijit/_TemplatedMixin,phpr/Api,phpr/Timehelper,phpr/models/Timecard,dojo/text!phpr/template/statistics/WorktimeMonthGraph.html,d3/d3.v3".split(","),function(h,n,r,o,w,p,i,x,s,t,e,j,l,u){var d=2,k=n(null,{_svgNode:null,_dayEntries:null,constructor:function(b,c){this._dayEntries=c;this._svgNode=b},todayX:function(b){b=
((new Date).getTime()-b.getTime())/864E5;return Math.min(Math.max(b*(this.barWidth()+d)-d/2,0),this.displayWidth())},barWidth:function(){return this.displayWidth()/this._dayEntries.length-d},displayWidth:function(){return o.get(this._svgNode,"width")},heightPerMinute:function(){return this.heightForTimebars()/900},heightForTimebars:function(){return o.get(this._svgNode,"height")}}),q=function(){function b(a,b){return b*(d+g.barWidth())}function c(a){return Math.max(2,g.heightPerMinute()*a.minutesBooked)}
function a(a){return Math.min(g.heightForTimebars()-2,g.heightForTimebars()-g.heightPerMinute()*a.minutesBooked)}function m(a){return!a.hasOwnProperty("minutesToWork")?"white":a.minutesBooked<a.minutesToWork?"#b5b5b5":"white"}function e(a){var b=i.format(j.dateToJsDate(a.date),{selector:"date"});0!==a.minutesBooked&&(b+=" ("+j.minutesToHMString(a.minutesBooked)+")");return b}var g;return function(d,f){g=new k(d,f);d3.select(d).selectAll().data(f).enter().append("svg:rect").attr("fill",m).attr("x",
b).attr("y",a).attr("width",h.hitch(g,g.barWidth)).attr("height",c).append("svg:title").text(e)}}(),v=function(){function b(a,b){return b*(d+f.barWidth())}function c(a,b){return(b+1)*(d+f.barWidth())}function a(a){return f.heightForTimebars()-f.heightPerMinute()*a.minutesToWork}function m(a,b){return b*(d+f.barWidth())}function h(a,b){return b*(d+f.barWidth())}function g(b,c){return 0===c?a(b,c):a(e[c-1],c-1)}var e,f;return function(d,j){e=j;f=new k(d,e);var i=d3.select(d).selectAll().data(e);i.enter().append("svg:line").attr("x1",
b).attr("x2",c).attr("y1",a).attr("y2",a).attr("stroke","#6aa700");i.enter().append("svg:line").attr("x1",m).attr("x2",h).attr("y1",g).attr("y2",a).attr("stroke","#6aa700")}}();return n([s,t],{templateString:u,baseClass:"thisMonthDiagram",projects:null,constructor:function(){this.projects=[]},buildRendering:function(){this.inherited(arguments);this._destroyed||(this._updateLabels(),l.getWorkBalanceByDay(this._getModelParams()).then(h.hitch(this,this._renderUsingWorkBalance),h.hitch(this,function(b){e.defaultErrorHandler(b);
l.getWorkedMinutesPerDay(this._getModelParams()).then(h.hitch(this,this._renderUsingMonthList),e.defaultErrorHandler)})))},_renderUsingWorkBalance:function(b){if(!0!==this._destroyed){var c=[],a;for(a in b.workBalancePerDay)c.push({date:a,minutesBooked:b.workBalancePerDay[a].minutesBooked,minutesToWork:b.workBalancePerDay[a].minutesToWork});q(this.bookedTimePerDayGraph,c);v(this.bookedTimePerDayGraph,c);this._fillOvertimeLabel();this._renderTodayMarker(this.bookedTimePerDayGraph,c);this._renderFutureDayMarker(this.bookedTimePerDayGraph,
c)}},_renderUsingDayList:function(b){if(!0!==this._destroyed){var c=[];r.forEach(b.days||[],function(a){c.push({date:a.date,minutesBooked:a.sumInMinutes})});0<c.length&&q(this.bookedTimePerDayGraph,c);this._renderTodayMarker(this.bookedTimePerDayGraph,c);this._renderFutureDayMarker(this.bookedTimePerDayGraph,c)}},_fillOvertimeLabel:function(){var b=this._getModelParams(),c=j.exclude(new Date);if(b.end.getTime()>c.getTime())b.end=c;l.getMonthStatistics(b).then(h.hitch(this,function(a){if(!0!==this._destroyed)this.overtimeLabel.innerHTML=
j.minutesToHMString(a.booked.minutesBooked-a.towork.minutesToWork)+" Overtime"}),function(a){e.defaultErrorHandler(a)})},_renderTodayMarker:function(b,c){var a=new Date;if(!(0<p.compare(a,this.endDate,"date")||0>p.compare(a,this.startDate,"date"))){var a=d3.select(this.bookedTimePerDayGraph),d=new k(b,c);a.append("rect").attr("x",d.todayX(this.startDate)-1).attr("width",2).attr("y",0).attr("height",d.heightForTimebars()).attr("fill","#0d639b")}},_renderFutureDayMarker:function(b,c){var a=d3.select(this.bookedTimePerDayGraph),
d=new k(b,c);a.append("rect").attr("fill","rgba(0,0,0,0.2)").attr("x",d.todayX(this.startDate)).attr("y",0).attr("width",d.displayWidth()-d.todayX(this.startDate)).attr("height",d.heightForTimebars())},_updateLabels:function(){this.firstDayLabel.innerHTML=i.format(this.startDate,{selector:"date",datePattern:"EEE MMM d"});this.lastDayLabel.innerHTML=i.format(this.endDate,{selector:"date",datePattern:"EEE MMM d"})},_getModelParams:function(){return{projects:this.projects,start:this.startDate,end:this.endDate}}})});